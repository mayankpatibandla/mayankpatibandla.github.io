(()=>{"use strict";var n={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},e={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},t=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],r={CSS:{},springs:{}};function a(n,e,t){return Math.min(Math.max(n,e),t)}function o(n,e){return n.indexOf(e)>-1}function u(n,e){return n.apply(null,e)}var i={arr:function(n){return Array.isArray(n)},obj:function(n){return o(Object.prototype.toString.call(n),"Object")},pth:function(n){return i.obj(n)&&n.hasOwnProperty("totalLength")},svg:function(n){return n instanceof SVGElement},inp:function(n){return n instanceof HTMLInputElement},dom:function(n){return n.nodeType||i.svg(n)},str:function(n){return"string"==typeof n},fnc:function(n){return"function"==typeof n},und:function(n){return void 0===n},nil:function(n){return i.und(n)||null===n},hex:function(n){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(n)},rgb:function(n){return/^rgb/.test(n)},hsl:function(n){return/^hsl/.test(n)},col:function(n){return i.hex(n)||i.rgb(n)||i.hsl(n)},key:function(t){return!n.hasOwnProperty(t)&&!e.hasOwnProperty(t)&&"targets"!==t&&"keyframes"!==t}};function c(n){var e=/\(([^)]+)\)/.exec(n);return e?e[1].split(",").map((function(n){return parseFloat(n)})):[]}function s(n,e){var t=c(n),o=a(i.und(t[0])?1:t[0],.1,100),u=a(i.und(t[1])?100:t[1],.1,100),s=a(i.und(t[2])?10:t[2],.1,100),f=a(i.und(t[3])?0:t[3],.1,100),l=Math.sqrt(u/o),d=s/(2*Math.sqrt(u*o)),p=d<1?l*Math.sqrt(1-d*d):0,h=1,g=d<1?(d*l-f)/p:-f+l;function v(n){var t=e?e*n/1e3:n;return t=d<1?Math.exp(-t*d*l)*(h*Math.cos(p*t)+g*Math.sin(p*t)):(h+g*t)*Math.exp(-t*l),0===n||1===n?n:1-t}return e?v:function(){var e=r.springs[n];if(e)return e;for(var t=1/6,a=0,o=0;;)if(1===v(a+=t)){if(++o>=16)break}else o=0;var u=a*t*1e3;return r.springs[n]=u,u}}function f(n){return void 0===n&&(n=10),function(e){return Math.ceil(a(e,1e-6,1)*n)*(1/n)}}var l,d,p=function(){var n=.1;function e(n,e){return 1-3*e+3*n}function t(n,e){return 3*e-6*n}function r(n){return 3*n}function a(n,a,o){return((e(a,o)*n+t(a,o))*n+r(a))*n}function o(n,a,o){return 3*e(a,o)*n*n+2*t(a,o)*n+r(a)}return function(e,t,r,u){if(0<=e&&e<=1&&0<=r&&r<=1){var i=new Float32Array(11);if(e!==t||r!==u)for(var c=0;c<11;++c)i[c]=a(c*n,e,r);return function(n){return e===t&&r===u||0===n||1===n?n:a(s(n),t,u)}}function s(t){for(var u=0,c=1;10!==c&&i[c]<=t;++c)u+=n;--c;var s=u+(t-i[c])/(i[c+1]-i[c])*n,f=o(s,e,r);return f>=.001?function(n,e,t,r){for(var u=0;u<4;++u){var i=o(e,t,r);if(0===i)return e;e-=(a(e,t,r)-n)/i}return e}(t,s,e,r):0===f?s:function(n,e,t,r,o){var u,i,c=0;do{(u=a(i=e+(t-e)/2,r,o)-n)>0?t=i:e=i}while(Math.abs(u)>1e-7&&++c<10);return i}(t,u,u+n,e,r)}}}(),h=(l={linear:function(){return function(n){return n}}},d={Sine:function(){return function(n){return 1-Math.cos(n*Math.PI/2)}},Expo:function(){return function(n){return n?Math.pow(2,10*n-10):0}},Circ:function(){return function(n){return 1-Math.sqrt(1-n*n)}},Back:function(){return function(n){return n*n*(3*n-2)}},Bounce:function(){return function(n){for(var e,t=4;n<((e=Math.pow(2,--t))-1)/11;);return 1/Math.pow(4,3-t)-7.5625*Math.pow((3*e-2)/22-n,2)}},Elastic:function(n,e){void 0===n&&(n=1),void 0===e&&(e=.5);var t=a(n,1,10),r=a(e,.1,2);return function(n){return 0===n||1===n?n:-t*Math.pow(2,10*(n-1))*Math.sin((n-1-r/(2*Math.PI)*Math.asin(1/t))*(2*Math.PI)/r)}}},["Quad","Cubic","Quart","Quint"].forEach((function(n,e){d[n]=function(){return function(n){return Math.pow(n,e+2)}}})),Object.keys(d).forEach((function(n){var e=d[n];l["easeIn"+n]=e,l["easeOut"+n]=function(n,t){return function(r){return 1-e(n,t)(1-r)}},l["easeInOut"+n]=function(n,t){return function(r){return r<.5?e(n,t)(2*r)/2:1-e(n,t)(-2*r+2)/2}},l["easeOutIn"+n]=function(n,t){return function(r){return r<.5?(1-e(n,t)(1-2*r))/2:(e(n,t)(2*r-1)+1)/2}}})),l);function g(n,e){if(i.fnc(n))return n;var t=n.split("(")[0],r=h[t],a=c(n);switch(t){case"spring":return s(n,e);case"cubicBezier":return u(p,a);case"steps":return u(f,a);default:return u(r,a)}}function v(n){try{return document.querySelectorAll(n)}catch(n){return}}function m(n,e){for(var t=n.length,r=arguments.length>=2?arguments[1]:void 0,a=[],o=0;o<t;o++)if(o in n){var u=n[o];e.call(r,u,o,n)&&a.push(u)}return a}function y(n){return n.reduce((function(n,e){return n.concat(i.arr(e)?y(e):e)}),[])}function b(n){return i.arr(n)?n:(i.str(n)&&(n=v(n)||n),n instanceof NodeList||n instanceof HTMLCollection?[].slice.call(n):[n])}function M(n,e){return n.some((function(n){return n===e}))}function x(n){var e={};for(var t in n)e[t]=n[t];return e}function w(n,e){var t=x(n);for(var r in n)t[r]=e.hasOwnProperty(r)?e[r]:n[r];return t}function P(n,e){var t=x(n);for(var r in e)t[r]=i.und(n[r])?e[r]:n[r];return t}function C(n){return i.rgb(n)?(t=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(e=n))?"rgba("+t[1]+",1)":e:i.hex(n)?function(n){var e=n.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(n,e,t,r){return e+e+t+t+r+r})),t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return"rgba("+parseInt(t[1],16)+","+parseInt(t[2],16)+","+parseInt(t[3],16)+",1)"}(n):i.hsl(n)?function(n){var e,t,r,a=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(n)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(n),o=parseInt(a[1],10)/360,u=parseInt(a[2],10)/100,i=parseInt(a[3],10)/100,c=a[4]||1;function s(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+6*(e-n)*t:t<.5?e:t<2/3?n+(e-n)*(2/3-t)*6:n}if(0==u)e=t=r=i;else{var f=i<.5?i*(1+u):i+u-i*u,l=2*i-f;e=s(l,f,o+1/3),t=s(l,f,o),r=s(l,f,o-1/3)}return"rgba("+255*e+","+255*t+","+255*r+","+c+")"}(n):void 0;var e,t}function k(n){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(n);if(e)return e[1]}function O(n,e){return i.fnc(n)?n(e.target,e.id,e.total):n}function B(n,e){return n.getAttribute(e)}function I(n,e,t){if(M([t,"deg","rad","turn"],k(e)))return e;var a=r.CSS[e+t];if(!i.und(a))return a;var o=document.createElement(n.tagName),u=n.parentNode&&n.parentNode!==document?n.parentNode:document.body;u.appendChild(o),o.style.position="absolute",o.style.width=100+t;var c=100/o.offsetWidth;u.removeChild(o);var s=c*parseFloat(e);return r.CSS[e+t]=s,s}function D(n,e,t){if(e in n.style){var r=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),a=n.style[e]||getComputedStyle(n).getPropertyValue(r)||"0";return t?I(n,a,t):a}}function T(n,e){return i.dom(n)&&!i.inp(n)&&(!i.nil(B(n,e))||i.svg(n)&&n[e])?"attribute":i.dom(n)&&M(t,e)?"transform":i.dom(n)&&"transform"!==e&&D(n,e)?"css":null!=n[e]?"object":void 0}function E(n){if(i.dom(n)){for(var e,t=n.style.transform||"",r=/(\w+)\(([^)]*)\)/g,a=new Map;e=r.exec(t);)a.set(e[1],e[2]);return a}}function A(n,e,t,r){var a=o(e,"scale")?1:0+function(n){return o(n,"translate")||"perspective"===n?"px":o(n,"rotate")||o(n,"skew")?"deg":void 0}(e),u=E(n).get(e)||a;return t&&(t.transforms.list.set(e,u),t.transforms.last=e),r?I(n,u,r):u}function F(n,e,t,r){switch(T(n,e)){case"transform":return A(n,e,r,t);case"css":return D(n,e,t);case"attribute":return B(n,e);default:return n[e]||0}}function L(n,e){var t=/^(\*=|\+=|-=)/.exec(n);if(!t)return n;var r=k(n)||0,a=parseFloat(e),o=parseFloat(n.replace(t[0],""));switch(t[0][0]){case"+":return a+o+r;case"-":return a-o+r;case"*":return a*o+r}}function N(n,e){if(i.col(n))return C(n);if(/\s/g.test(n))return n;var t=k(n),r=t?n.substr(0,n.length-t.length):n;return e?r+e:r}function S(n,e){return Math.sqrt(Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2))}function j(n){for(var e,t=n.points,r=0,a=0;a<t.numberOfItems;a++){var o=t.getItem(a);a>0&&(r+=S(e,o)),e=o}return r}function q(n){if(n.getTotalLength)return n.getTotalLength();switch(n.tagName.toLowerCase()){case"circle":return function(n){return 2*Math.PI*B(n,"r")}(n);case"rect":return function(n){return 2*B(n,"width")+2*B(n,"height")}(n);case"line":return function(n){return S({x:B(n,"x1"),y:B(n,"y1")},{x:B(n,"x2"),y:B(n,"y2")})}(n);case"polyline":return j(n);case"polygon":return function(n){var e=n.points;return j(n)+S(e.getItem(e.numberOfItems-1),e.getItem(0))}(n)}}function H(n,e){var t=e||{},r=t.el||function(n){for(var e=n.parentNode;i.svg(e)&&i.svg(e.parentNode);)e=e.parentNode;return e}(n),a=r.getBoundingClientRect(),o=B(r,"viewBox"),u=a.width,c=a.height,s=t.viewBox||(o?o.split(" "):[0,0,u,c]);return{el:r,viewBox:s,x:s[0]/1,y:s[1]/1,w:u,h:c,vW:s[2],vH:s[3]}}function $(n,e,t){function r(t){void 0===t&&(t=0);var r=e+t>=1?e+t:0;return n.el.getPointAtLength(r)}var a=H(n.el,n.svg),o=r(),u=r(-1),i=r(1),c=t?1:a.w/a.vW,s=t?1:a.h/a.vH;switch(n.property){case"x":return(o.x-a.x)*c;case"y":return(o.y-a.y)*s;case"angle":return 180*Math.atan2(i.y-u.y,i.x-u.x)/Math.PI}}function W(n,e){var t=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,r=N(i.pth(n)?n.totalLength:n,e)+"";return{original:r,numbers:r.match(t)?r.match(t).map(Number):[0],strings:i.str(n)||e?r.split(t):[]}}function V(n){return m(n?y(i.arr(n)?n.map(b):b(n)):[],(function(n,e,t){return t.indexOf(n)===e}))}function X(n){var e=V(n);return e.map((function(n,t){return{target:n,id:t,total:e.length,transforms:{list:E(n)}}}))}function Y(n,e){var t=x(e);if(/^spring/.test(t.easing)&&(t.duration=s(t.easing)),i.arr(n)){var r=n.length;2===r&&!i.obj(n[0])?n={value:n}:i.fnc(e.duration)||(t.duration=e.duration/r)}var a=i.arr(n)?n:[n];return a.map((function(n,t){var r=i.obj(n)&&!i.pth(n)?n:{value:n};return i.und(r.delay)&&(r.delay=t?0:e.delay),i.und(r.endDelay)&&(r.endDelay=t===a.length-1?e.endDelay:0),r})).map((function(n){return P(n,t)}))}function Z(n,e){var t=[],r=e.keyframes;for(var a in r&&(e=P(function(n){for(var e=m(y(n.map((function(n){return Object.keys(n)}))),(function(n){return i.key(n)})).reduce((function(n,e){return n.indexOf(e)<0&&n.push(e),n}),[]),t={},r=function(r){var a=e[r];t[a]=n.map((function(n){var e={};for(var t in n)i.key(t)?t==a&&(e.value=n[t]):e[t]=n[t];return e}))},a=0;a<e.length;a++)r(a);return t}(r),e)),e)i.key(a)&&t.push({name:a,tweens:Y(e[a],n)});return t}function z(n,e){var t;return n.tweens.map((function(r){var a=function(n,e){var t={};for(var r in n){var a=O(n[r],e);i.arr(a)&&1===(a=a.map((function(n){return O(n,e)}))).length&&(a=a[0]),t[r]=a}return t.duration=parseFloat(t.duration),t.delay=parseFloat(t.delay),t}(r,e),o=a.value,u=i.arr(o)?o[1]:o,c=k(u),s=F(e.target,n.name,c,e),f=t?t.to.original:s,l=i.arr(o)?o[0]:f,d=k(l)||k(s),p=c||d;return i.und(u)&&(u=f),a.from=W(l,p),a.to=W(L(u,l),p),a.start=t?t.end:0,a.end=a.start+a.delay+a.duration+a.endDelay,a.easing=g(a.easing,a.duration),a.isPath=i.pth(o),a.isPathTargetInsideSVG=a.isPath&&i.svg(e.target),a.isColor=i.col(a.from.original),a.isColor&&(a.round=1),t=a,a}))}var G={css:function(n,e,t){return n.style[e]=t},attribute:function(n,e,t){return n.setAttribute(e,t)},object:function(n,e,t){return n[e]=t},transform:function(n,e,t,r,a){if(r.list.set(e,t),e===r.last||a){var o="";r.list.forEach((function(n,e){o+=e+"("+n+") "})),n.style.transform=o}}};function Q(n,e){X(n).forEach((function(n){for(var t in e){var r=O(e[t],n),a=n.target,o=k(r),u=F(a,t,o,n),i=L(N(r,o||k(u)),u),c=T(a,t);G[c](a,t,i,n.transforms,!0)}}))}function R(n,e){return m(y(n.map((function(n){return e.map((function(e){return function(n,e){var t=T(n.target,e.name);if(t){var r=z(e,n),a=r[r.length-1];return{type:t,property:e.name,animatable:n,tweens:r,duration:a.end,delay:r[0].delay,endDelay:a.endDelay}}}(n,e)}))}))),(function(n){return!i.und(n)}))}function _(n,e){var t=n.length,r=function(n){return n.timelineOffset?n.timelineOffset:0},a={};return a.duration=t?Math.max.apply(Math,n.map((function(n){return r(n)+n.duration}))):e.duration,a.delay=t?Math.min.apply(Math,n.map((function(n){return r(n)+n.delay}))):e.delay,a.endDelay=t?a.duration-Math.max.apply(Math,n.map((function(n){return r(n)+n.duration-n.endDelay}))):e.endDelay,a}var J=0;var K=[],U=function(){var n;function e(t){for(var r=K.length,a=0;a<r;){var o=K[a];o.paused?(K.splice(a,1),r--):(o.tick(t),a++)}n=a>0?requestAnimationFrame(e):void 0}return"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){en.suspendWhenDocumentHidden&&(nn()?n=cancelAnimationFrame(n):(K.forEach((function(n){return n._onDocumentVisibility()})),U()))})),function(){n||nn()&&en.suspendWhenDocumentHidden||!(K.length>0)||(n=requestAnimationFrame(e))}}();function nn(){return!!document&&document.hidden}function en(t){void 0===t&&(t={});var r,o=0,u=0,i=0,c=0,s=null;function f(n){var e=window.Promise&&new Promise((function(n){return s=n}));return n.finished=e,e}var l=function(t){var r=w(n,t),a=w(e,t),o=Z(a,t),u=X(t.targets),i=R(u,o),c=_(i,a),s=J;return J++,P(r,{id:s,children:[],animatables:u,animations:i,duration:c.duration,delay:c.delay,endDelay:c.endDelay})}(t);f(l);function d(){var n=l.direction;"alternate"!==n&&(l.direction="normal"!==n?"normal":"reverse"),l.reversed=!l.reversed,r.forEach((function(n){return n.reversed=l.reversed}))}function p(n){return l.reversed?l.duration-n:n}function h(){o=0,u=p(l.currentTime)*(1/en.speed)}function g(n,e){e&&e.seek(n-e.timelineOffset)}function v(n){for(var e=0,t=l.animations,r=t.length;e<r;){var o=t[e],u=o.animatable,i=o.tweens,c=i.length-1,s=i[c];c&&(s=m(i,(function(e){return n<e.end}))[0]||s);for(var f=a(n-s.start-s.delay,0,s.duration)/s.duration,d=isNaN(f)?1:s.easing(f),p=s.to.strings,h=s.round,g=[],v=s.to.numbers.length,y=void 0,b=0;b<v;b++){var M=void 0,x=s.to.numbers[b],w=s.from.numbers[b]||0;M=s.isPath?$(s.value,d*x,s.isPathTargetInsideSVG):w+d*(x-w),h&&(s.isColor&&b>2||(M=Math.round(M*h)/h)),g.push(M)}var P=p.length;if(P){y=p[0];for(var C=0;C<P;C++){p[C];var k=p[C+1],O=g[C];isNaN(O)||(y+=k?O+k:O+" ")}}else y=g[0];G[o.type](u.target,o.property,y,u.transforms),o.currentValue=y,e++}}function y(n){l[n]&&!l.passThrough&&l[n](l)}function b(n){var e=l.duration,t=l.delay,h=e-l.endDelay,m=p(n);l.progress=a(m/e*100,0,100),l.reversePlayback=m<l.currentTime,r&&function(n){if(l.reversePlayback)for(var e=c;e--;)g(n,r[e]);else for(var t=0;t<c;t++)g(n,r[t])}(m),!l.began&&l.currentTime>0&&(l.began=!0,y("begin")),!l.loopBegan&&l.currentTime>0&&(l.loopBegan=!0,y("loopBegin")),m<=t&&0!==l.currentTime&&v(0),(m>=h&&l.currentTime!==e||!e)&&v(e),m>t&&m<h?(l.changeBegan||(l.changeBegan=!0,l.changeCompleted=!1,y("changeBegin")),y("change"),v(m)):l.changeBegan&&(l.changeCompleted=!0,l.changeBegan=!1,y("changeComplete")),l.currentTime=a(m,0,e),l.began&&y("update"),n>=e&&(u=0,l.remaining&&!0!==l.remaining&&l.remaining--,l.remaining?(o=i,y("loopComplete"),l.loopBegan=!1,"alternate"===l.direction&&d()):(l.paused=!0,l.completed||(l.completed=!0,y("loopComplete"),y("complete"),!l.passThrough&&"Promise"in window&&(s(),f(l)))))}return l.reset=function(){var n=l.direction;l.passThrough=!1,l.currentTime=0,l.progress=0,l.paused=!0,l.began=!1,l.loopBegan=!1,l.changeBegan=!1,l.completed=!1,l.changeCompleted=!1,l.reversePlayback=!1,l.reversed="reverse"===n,l.remaining=l.loop,r=l.children;for(var e=c=r.length;e--;)l.children[e].reset();(l.reversed&&!0!==l.loop||"alternate"===n&&1===l.loop)&&l.remaining++,v(l.reversed?l.duration:0)},l._onDocumentVisibility=h,l.set=function(n,e){return Q(n,e),l},l.tick=function(n){i=n,o||(o=i),b((i+(u-o))*en.speed)},l.seek=function(n){b(p(n))},l.pause=function(){l.paused=!0,h()},l.play=function(){l.paused&&(l.completed&&l.reset(),l.paused=!1,K.push(l),h(),U())},l.reverse=function(){d(),l.completed=!l.reversed,h()},l.restart=function(){l.reset(),l.play()},l.remove=function(n){rn(V(n),l)},l.reset(),l.autoplay&&l.play(),l}function tn(n,e){for(var t=e.length;t--;)M(n,e[t].animatable.target)&&e.splice(t,1)}function rn(n,e){var t=e.animations,r=e.children;tn(n,t);for(var a=r.length;a--;){var o=r[a],u=o.animations;tn(n,u),u.length||o.children.length||r.splice(a,1)}t.length||r.length||e.pause()}en.version="3.2.1",en.speed=1,en.suspendWhenDocumentHidden=!0,en.running=K,en.remove=function(n){for(var e=V(n),t=K.length;t--;){rn(e,K[t])}},en.get=F,en.set=Q,en.convertPx=I,en.path=function(n,e){var t=i.str(n)?v(n)[0]:n,r=e||100;return function(n){return{property:n,el:t,svg:H(t),totalLength:q(t)*(r/100)}}},en.setDashoffset=function(n){var e=q(n);return n.setAttribute("stroke-dasharray",e),e},en.stagger=function(n,e){void 0===e&&(e={});var t=e.direction||"normal",r=e.easing?g(e.easing):null,a=e.grid,o=e.axis,u=e.from||0,c="first"===u,s="center"===u,f="last"===u,l=i.arr(n),d=l?parseFloat(n[0]):parseFloat(n),p=l?parseFloat(n[1]):0,h=k(l?n[1]:n)||0,v=e.start||0+(l?d:0),m=[],y=0;return function(n,e,i){if(c&&(u=0),s&&(u=(i-1)/2),f&&(u=i-1),!m.length){for(var g=0;g<i;g++){if(a){var b=s?(a[0]-1)/2:u%a[0],M=s?(a[1]-1)/2:Math.floor(u/a[0]),x=b-g%a[0],w=M-Math.floor(g/a[0]),P=Math.sqrt(x*x+w*w);"x"===o&&(P=-x),"y"===o&&(P=-w),m.push(P)}else m.push(Math.abs(u-g));y=Math.max.apply(Math,m)}r&&(m=m.map((function(n){return r(n/y)*y}))),"reverse"===t&&(m=m.map((function(n){return o?n<0?-1*n:-n:Math.abs(y-n)})))}return v+(l?(p-d)/y:d)*(Math.round(100*m[e])/100)+h}},en.timeline=function(n){void 0===n&&(n={});var t=en(n);return t.duration=0,t.add=function(r,a){var o=K.indexOf(t),u=t.children;function c(n){n.passThrough=!0}o>-1&&K.splice(o,1);for(var s=0;s<u.length;s++)c(u[s]);var f=P(r,w(e,n));f.targets=f.targets||n.targets;var l=t.duration;f.autoplay=!1,f.direction=t.direction,f.timelineOffset=i.und(a)?l:L(a,l),c(t),t.seek(f.timelineOffset);var d=en(f);c(d),u.push(d);var p=_(u,n);return t.delay=p.delay,t.endDelay=p.endDelay,t.duration=p.duration,t.seek(0),t.reset(),t.autoplay&&t.play(),t},t},en.easing=g,en.penner=h,en.random=function(n,e){return Math.floor(Math.random()*(e-n+1))+n};const an=en,on=document.getElementById("tiles");let un=0,cn=0,sn=!1;const fn=n=>{sn=!sn,document.body.classList.toggle("toggled"),an({targets:".tile",opacity:sn?0:1,delay:an.stagger(50,{grid:[un,cn],from:n})})},ln=n=>{Array.from(Array(n)).map(((n,e)=>{on&&on.appendChild((n=>{const e=document.createElement("div");return e.classList.add("tile"),e.style.opacity=sn?"0":"1",e.onclick=()=>fn(n),e})(e))}))},dn=()=>{if(!on)return;on.innerHTML="";const n=document.body.clientWidth>800?100:50;un=Math.floor(document.body.clientWidth/n),cn=Math.floor(document.body.clientHeight/n),on.style.setProperty("--columns",un.toString()),on.style.setProperty("--rows",cn.toString()),ln(un*cn)};dn(),window.onresize=()=>dn();const pn=n=>{const{currentTarget:e}=n;if(e){const t=e,r=t.getBoundingClientRect(),a=n.clientX-r.left,o=n.clientY-r.top;t.style.setProperty("--mouse-x",`${a}px`),t.style.setProperty("--mouse-y",`${o}px`)}};Array.from(document.getElementsByClassName("tile")).map((n=>{n.onmousemove=pn}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,